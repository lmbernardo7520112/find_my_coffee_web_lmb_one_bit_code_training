{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/lmbernardo/find_my_coffee_api/find_my_coffee_web/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport Establishment from './components/Establishment';\nimport NearstCoffees from './components/NearstCoffees';\nimport EstablishmentsService from './services/establishment_service';\n\nfunction App() {\n  _s();\n\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setLongitude] = useState(0);\n  const [locations, setLocations] = useState([]);\n  const [selected, setSelected] = useState({});\n  const {\n    REACT_APP_GOOGLE_API_KEY\n  } = process.env;\n  useEffect(() => {\n    setCurrentLocation();\n  }, []);\n\n  async function setCurrentLocation() {\n    await navigator.geolocation.getCurrentPosition(function (position) {\n      setLatitude(position.coords.latitude);\n      setLongitude(position.coords.longitude);\n      loadCoffeeShops();\n    }, function (error) {\n      alert(\"Habilite a localização para usar esse APP\");\n    });\n  }\n\n  async function loadCoffeeShops() {\n    const response = await EstablishmentsService.index(latitude, longitude);\n    setLocations(response.data.results);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: REACT_APP_GOOGLE_API_KEY,\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: {\n          height: \"100vh\",\n          width: \"100%\"\n        },\n        zoom: 15,\n        center: {\n          lat: latitude,\n          lng: longitude\n        },\n        children: [locations.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            icon: \"/images/coffee-pin.png\",\n            title: item.name,\n            animation: \"4\",\n            position: {\n              lat: item.geometry.location.lat,\n              lng: item.geometry.location.lng\n            },\n            onClick: () => setSelected(item)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this);\n        }), selected.place_id && /*#__PURE__*/_jsxDEV(Establishment, {\n          place: selected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          icon: \"/images/my-location-pin.png\",\n          title: \"Seu local\",\n          animation: \"2\",\n          position: {\n            lat: latitude,\n            lng: longitude\n          }\n        }, \"my location\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"UZDdpRceSLYg3tbsErICPa3ZlxY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/lmbernardo/find_my_coffee_api/find_my_coffee_web/src/App.js"],"names":["React","Fragment","useState","useEffect","GoogleMap","LoadScript","Marker","Establishment","NearstCoffees","EstablishmentsService","App","latitude","setLatitude","longitude","setLongitude","locations","setLocations","selected","setSelected","REACT_APP_GOOGLE_API_KEY","process","env","setCurrentLocation","navigator","geolocation","getCurrentPosition","position","coords","loadCoffeeShops","error","alert","response","index","data","results","height","width","lat","lng","map","item","name","geometry","location","place_id"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport Establishment from './components/Establishment';\nimport NearstCoffees from './components/NearstCoffees';\n\nimport EstablishmentsService from './services/establishment_service';\n\nfunction App() {\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setLongitude] = useState(0);\n  const [locations, setLocations] = useState([]);\n  const [selected, setSelected] = useState({});\n  \n  const { REACT_APP_GOOGLE_API_KEY } = process.env;\n\n  useEffect(() => {\n    setCurrentLocation();\n  }, [])\n \n  async function setCurrentLocation() {\n    await navigator.geolocation.getCurrentPosition(function (position) {\n      setLatitude(position.coords.latitude);\n      setLongitude(position.coords.longitude);\n      loadCoffeeShops();\n    }, function(error) {\n      alert(\"Habilite a localização para usar esse APP\")\n    })\n  }\n\n  async function loadCoffeeShops() {\n    const response = await EstablishmentsService.index(latitude, longitude);\n    setLocations(response.data.results);\n  }\n\n  return (\n    <Fragment>\n      <LoadScript googleMapsApiKey={REACT_APP_GOOGLE_API_KEY}>\n        <GoogleMap mapContainerStyle={{height: \"100vh\", width: \"100%\"}}\n          zoom={15}\n          center={{lat: latitude, lng: longitude}}\n        >\n          {\n            locations.map((item, index) => {\n              return (\n                <Marker key={index} icon=\"/images/coffee-pin.png\" title={item.name} animation=\"4\" \n                  position={{lat: item.geometry.location.lat, lng: item.geometry.location.lng}}\n                  onClick={() => setSelected(item)}\n                />\n              )\n            })\n          }\n          {\n            selected.place_id && (\n              <Establishment place={selected}/>\n            )\n          }\n          <Marker key=\"my location\" icon=\"/images/my-location-pin.png\" title=\"Seu local\" animation=\"2\"\n            position={{lat: latitude, lng: longitude}}\n          />\n\n        \n\n        </GoogleMap>\n      </LoadScript>\n    </Fragment>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}